# Allow Emacs TRAMP to function. (For some reason it uses an interactive shell.)
# Should be before [most] other settings.
# https://blog.karssen.org/2016/03/02/fixing-emacs-tramp-mode-when-using-zsh/
if [[ "${TERM}" == dumb ]]; then
    unsetopt zle
    PS1='$ '
    return
fi

# TODO(strager): Move into ~/.zshenv.
fpath=(~/.zsh/strager "${fpath[@]}")
autoload -Uk ls
autoload -Uk sexercism
autoload -Uk strager_deduplicate_history_lines
autoload -Uk strager_define_auto_scm_aliases
autoload -Uk strager_define_bzr_scm_aliases
autoload -Uk strager_define_git_scm_aliases
autoload -Uk strager_define_hg_scm_aliases
autoload -Uk strager_define_sl_scm_aliases
autoload -Uk strager_ftcs_sequence
autoload -Uk strager_gnome_terminal_cursor_sequence
autoload -Uk strager_initialize_ls_colors
autoload -Uk strager_initialize_menuselect
autoload -Uk strager_initialize_post_prompt
autoload -Uk strager_iterm_preexec
autoload -Uk strager_iterm_sequence
autoload -Uk strager_iterm_wrap_prompt
autoload -Uk strager_linux_softcursor_sequence
autoload -Uk strager_move_backward_shortword
autoload -Uk strager_prompt_cwd
autoload -Uk strager_scm_in_bzr
autoload -Uk strager_scm_in_git
autoload -Uk strager_scm_in_hg
autoload -Uk strager_scm_in_sl
autoload -Uk strager_search_history
autoload -Uk strager_set_block_cursor
autoload -Uk strager_set_vertical_bar_cursor
autoload -Uk strager_update_cursor_during_edit
autoload -Uk strager_update_man_db

# Saved history.
# N.B. Do not set HISTFILE here. HISTFILE is set by
# strager_initialize_history.
unset HISTFILE
STRAGER_HISTFILE=~/.zshhistory
HISTSIZE=100000
SAVEHIST=100000
setopt hist_find_no_dups
setopt inc_append_history
unsetopt hist_ignore_space

# Command interpretation.
setopt autocd
setopt chase_dots
setopt interactive_comments

# Keyboard bindings.
bindkey -e
strager_initialize_menuselect

# TODO(strager): select-word-style bash (except for ^W).

bindkey "${terminfo[kdch1]}" delete-char

zle -N strager_move_backward_shortword

strager_backward_kill_blankword() {
    local MARK="${CURSOR}"
    local CURSOR="${CURSOR}"
    zle vi-backward-blank-word
    zle kill-region
}
zle -N strager_backward_kill_blankword
bindkey '^W' strager_backward_kill_blankword

strager_backward_kill_shortword() {
    local MARK="${CURSOR}"
    local CURSOR="${CURSOR}"
    zle strager_move_backward_shortword
    zle kill-region
}
zle -N strager_backward_kill_shortword
bindkey '^[^?' strager_backward_kill_shortword

autoload -U up-line-or-beginning-search
zle -N up-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up

autoload -U down-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search # down

autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

bindkey '^I' menu-expand-or-complete
bindkey -M menuselect '^?' send-break
bindkey -M menuselect '^H' send-break
bindkey -M menuselect '^[[Z' reverse-menu-complete

zle -N strager_search_history
bindkey '^R' strager_search_history

# Completion.
# N.B. Do not call compinit here. compinit is called by
# strager_initialize_completion.
unsetopt auto_remove_slash
zstyle ':completion:*' menu select

# Environment.
export EDITOR=emacsclient
export PATH="${HOME}/bin:${PATH}"
export PATH="${HOME}/.cargo/bin:${PATH}"
export PATH="${HOME}/go/bin:${PATH}"
# NOTE(strager): strager_initialize_nix adds
# ~/.nix-profile/bin to $PATH, among other things.

# Tell glibc in Nix-installed programs where to find locales.
for file in /usr/lib/locale/locale-archive; do
  if [ -f "${file}" ]; then
    export LOCALE_ARCHIVE="${file}"
    break
  fi
done

# The prompt:
#
#     ~/Applications> false
#     ~/Applications 1> cd /tmp
#     /tmp>
setopt prompt_subst
PROMPT=
# Current directory.
PROMPT="${PROMPT}%F{green}\$(strager_prompt_cwd)%f"
# Exit code of previous command.
PROMPT="${PROMPT}%(0?;; %F{red}%?%f)"
# Terminator.
PROMPT="${PROMPT}> "
# iTerm 2 integration.
PROMPT="$(strager_iterm_wrap_prompt "${PROMPT}")"
preexec_functions=(strager_iterm_preexec "${preexec_functions[@]}")

# Cursor style.
PROMPT="${PROMPT}%{\$(strager_update_cursor_during_edit)%}"
preexec_functions=("${preexec_functions[@]}" strager_set_block_cursor)
zle-keymap-select() {
    strager_update_cursor_during_edit
}
zle -N zle-keymap-select

strager_initialize_ls_colors

# Git and Hg aliases.
chpwd_functions=("${chpwd_functions[@]}" strager_define_auto_scm_aliases)
strager_define_auto_scm_aliases

title() {
    printf '\x1b]1;%s\x07' "${1}" # iTerm
    printf '\x1b]2;%s\x07' "${1}" # gnome-terminal
}

vobjdump() {
    objdump "${@}" | view -c 'set filetype=objdump' -
}

nix-env() {
    command nix-env "${@}"
    local exit_status="${?}"
    strager_update_man_db
    return "${exit_status}"
}

ncdu() {
    command ncdu --color dark "${@}"
}

dd() {
    command dd status=progress "${@}"
}

# Input styling.
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main)
typeset -A ZSH_HIGHLIGHT_STYLES
# TODO(strager): Fix the following issues:
# * https://github.com/zsh-users/zsh-syntax-highlighting/issues/239
# * https://github.com/zsh-users/zsh-syntax-highlighting/issues/202
# TODO(strager): Underline /absolute/path commands but not
# $PATH commands.
_command_style='fg=26'
_argument_style='fg=39'
_error_style='fg=red'
ZSH_HIGHLIGHT_STYLES[alias]="${_command_style}"
ZSH_HIGHLIGHT_STYLES[arg0]="${_command_style}"
ZSH_HIGHLIGHT_STYLES[builtin]="${_command_style}"
ZSH_HIGHLIGHT_STYLES[command]="${_command_style},underline"
ZSH_HIGHLIGHT_STYLES[comment]='fg=10'
ZSH_HIGHLIGHT_STYLES[default]="${_argument_style}"
ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument-unclosed]="${_error_style}"
ZSH_HIGHLIGHT_STYLES[double-hypen-option]="${_argument_style}"
ZSH_HIGHLIGHT_STYLES[double-quoted-argument-unclosed]="${_error_style}"
ZSH_HIGHLIGHT_STYLES[function]="${_command_style}"
ZSH_HIGHLIGHT_STYLES[hashed-command]="${_command_style},underline"
ZSH_HIGHLIGHT_STYLES[path]="${_argument_style},underline"
ZSH_HIGHLIGHT_STYLES[precommand]="${_command_style}"
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=093'
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]="${_argument_style}"
ZSH_HIGHLIGHT_STYLES[single-quoted-argument-unclosed]="${_error_style}"
# N.B. Do not source zsh-syntax-highlighting.zsh here. That
# script is sourced by
# strager_initialize_zsh_syntax_highlighting.

# Automatic completion.
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=238'
# N.B. Do not source zsh-autosuggestions.zsh here. That
# script is sourced by
# strager_initialize_zsh_autosuggestions.

# N.B. Register zle-line-init after loading
# zsh-syntax-highlighting to avoid zsh-syntax-highlighting's
# wrappers.
if [[ "${STRAGER_INITIALIZE_POST_PROMPT:-1}" -eq 1 ]]; then
    strager_zle-line-init() {
        strager_initialize_post_prompt
        zle -D zle-line-init
    }
    zle -N zle-line-init strager_zle-line-init
fi

# Configure other programs.
export FZF_DEFAULT_COMMAND="$(cat ~/.config/fzf/FZF_DEFAULT_COMMAND)"
export FZF_DEFAULT_OPTS='--info=hidden --no-mouse'
